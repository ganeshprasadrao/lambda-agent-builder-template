{
  "templates": [
    {
      "name": "lambda-agent-builder",
      "github_url": "https://github.com/ganeshprasadrao/templates-hq",
      "description": "A powerful template for building AI agents using Python, AWS Lambda, FastAPI, and LangChain/LangGraph",
      "purpose": "Provides a production-ready foundation for deploying AI agents as serverless functions",
      "use_cases": [
        "Conversational AI agents that need to scale",
        "AI assistants deployed on AWS infrastructure",
        "Serverless LLM-powered applications",
        "RESTful AI services with low latency requirements"
      ],
      "tech_stack": [
        "Python 3.12+",
        "FastAPI",
        "AWS Lambda",
        "Zappa",
        "LangChain/LangGraph",
        "uv (dependency management)"
      ],
      "structure": {
        "core/": "Core agent logic and components",
        "core/agent.py": "Agent implementation with LLM integration and context handling",
        "core/chains/": "LangChain chains for structured reasoning workflows",
        "core/tools/": "Custom tools extending agent capabilities",
        "core/utils/": "Utility functions including logging and configuration",
        "main.py": "FastAPI application with agent endpoints and error handling",
        "lambda_handler.py": "AWS Lambda handler using Mangum for ASGI compatibility",
        "zappa_settings.json": "Zappa deployment configuration for AWS Lambda",
        "pyproject.toml": "Project dependencies and build configuration"
      },
      "features": [
        "High-performance API endpoints with FastAPI",
        "AWS Lambda deployment using Zappa",
        "LangChain/LangGraph integration",
        "Environment management and security best practices",
        "Comprehensive logging and monitoring",
        "Serverless architecture for scalability",
        "Local development environment"
      ],
      "key_files": {
        "main.py": {
          "purpose": "FastAPI application entry point",
          "features": [
            "Agent chat endpoint",
            "Health check",
            "Error handling",
            "Request/response models"
          ],
          "common_changes": [
            "Add custom API endpoints",
            "Modify agent configuration",
            "Add middleware"
          ]
        },
        "core/agent.py": {
          "purpose": "Define and configure the LLM-powered agent",
          "features": [
            "Agent class with LLM integration",
            "Context handling",
            "Tool registry",
            "System prompt management"
          ],
          "common_changes": [
            "Change LLM provider",
            "Customize system prompt",
            "Add agent capabilities"
          ]
        },
        "core/tools/base.py": {
          "purpose": "Tool registry and loading mechanism",
          "features": ["Tool registration", "Function calling capabilities"],
          "common_changes": ["Add custom tools", "Modify tool behavior"]
        }
      },
      "implementation_details": {
        "agent_architecture": "The agent uses LangChain to integrate with LLMs (default: OpenAI) and implements tools for extended capabilities",
        "deployment": "Deployable to AWS Lambda using Zappa, exposing a RESTful API via API Gateway",
        "state_management": "Stateless design allowing for serverless deployment, with context passed in requests"
      },
      "directory": "python_templates/aws_lambda_agent_builder"
    },
    {
      "name": "lambda-fastapi",
      "github_url": "https://github.com/ganeshprasadrao/templates-hq",
      "description": "A lightweight template for building FastAPI applications deployed on AWS Lambda",
      "purpose": "Provides a production-ready foundation for deploying FastAPI applications as serverless functions",
      "use_cases": [
        "RESTful APIs that need to scale",
        "Microservices deployed on AWS infrastructure",
        "Serverless web applications",
        "API services with low latency requirements"
      ],
      "tech_stack": [
        "Python 3.12+",
        "FastAPI",
        "AWS Lambda",
        "Zappa",
        "Mangum",
        "uv (dependency management)"
      ],
      "structure": {
        "core/": "Core application components",
        "core/config.py": "Application configuration with environment variable support",
        "core/utils/": "Utility functions for logging and ASGI/WSGI conversion",
        "core/utils/logger.py": "Structured logging with Loguru",
        "core/utils/asgi_to_wsgi.py": "ASGI to WSGI converter for broader compatibility",
        "api/": "API route definitions organized by version",
        "api/v1/": "Version 1 API endpoints",
        "api/v1/endpoints/": "Specific API endpoint modules",
        "main.py": "FastAPI application with route configurations",
        "lambda_handler.py": "AWS Lambda handler with Mangum",
        "zappa_settings.json": "Zappa deployment configuration for multiple environments",
        "pyproject.toml": "Project dependencies and build configuration",
        "uv.lock": "Lock file for uv dependency management"
      },
      "features": [
        "High-performance API endpoints with FastAPI",
        "AWS Lambda deployment using Zappa",
        "Environment management and security best practices",
        "Comprehensive logging with Loguru",
        "Serverless architecture for scalability",
        "Local development environment",
        "API versioning and organized route structure"
      ],
      "key_files": {
        "main.py": {
          "purpose": "FastAPI application entry point",
          "features": [
            "API configuration",
            "Route inclusion",
            "Error handling",
            "Request validation"
          ],
          "common_changes": [
            "Add middleware",
            "Configure CORS",
            "Add new API versions"
          ]
        },
        "lambda_handler.py": {
          "purpose": "AWS Lambda entry point",
          "features": [
            "Mangum integration for ASGI support",
            "Lambda event handling"
          ],
          "common_changes": [
            "Configure Mangum options",
            "Add custom event handling"
          ]
        },
        "api/v1/api.py": {
          "purpose": "Version 1 API router configuration",
          "features": ["Router assembly", "Endpoint organization"],
          "common_changes": [
            "Add new endpoints",
            "Configure route prefixes",
            "Add route tags"
          ]
        },
        "core/errors/http_error.py": {
          "purpose": "Standardized HTTP error handling",
          "features": ["Consistent error responses", "Error factories"],
          "common_changes": [
            "Add custom error types",
            "Modify error response format"
          ]
        }
      },
      "implementation_details": {
        "api_structure": "Organized by API version with dedicated endpoint modules for maintainability",
        "deployment": "Zappa handles AWS Lambda deployment with environment-specific configurations",
        "error_handling": "Standardized error responses for consistent API behavior"
      },
      "directory": "python_templates/aws_lambda_fast_api"
    }
  ]
}
